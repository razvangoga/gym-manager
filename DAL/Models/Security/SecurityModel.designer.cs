#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Models.Security
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gray_GymManager")]
	public partial class SecurityModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAccess_Right(Access_Right instance);
    partial void UpdateAccess_Right(Access_Right instance);
    partial void DeleteAccess_Right(Access_Right instance);
    partial void InsertLocked_Object(Locked_Object instance);
    partial void UpdateLocked_Object(Locked_Object instance);
    partial void DeleteLocked_Object(Locked_Object instance);
    #endregion
		
		public SecurityModelDataContext() : 
				base(global::DAL.Properties.Settings.Default.Gray_GymManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SecurityModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SecurityModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SecurityModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SecurityModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Roles_Access_Right> Roles_Access_Rights
		{
			get
			{
				return this.GetTable<Roles_Access_Right>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Access_Right> Access_Rights
		{
			get
			{
				return this.GetTable<Access_Right>();
			}
		}
		
		public System.Data.Linq.Table<Locked_Object> Locked_Objects
		{
			get
			{
				return this.GetTable<Locked_Object>();
			}
		}
		
		private void InsertRoles_Access_Right(Roles_Access_Right obj)
		{
			System.Nullable<int> p1 = obj.id;
			this.RolesAccessRights_Insert(ref p1, ((System.Nullable<int>)(obj.Role_id)), ((System.Nullable<int>)(obj.Access_Right_id)), ((System.Nullable<bool>)(obj.HasNew)), ((System.Nullable<bool>)(obj.HasEdit)), ((System.Nullable<bool>)(obj.HasDelete)), ((System.Nullable<int>)(obj.created_by)), ((System.Nullable<System.DateTime>)(obj.created_at)));
			obj.id = p1.GetValueOrDefault();
		}
		
		private void UpdateRoles_Access_Right(Roles_Access_Right obj)
		{
			this.RolesAccessRights_Update(((System.Nullable<int>)(obj.id)), ((System.Nullable<int>)(obj.Role_id)), ((System.Nullable<int>)(obj.Access_Right_id)), ((System.Nullable<bool>)(obj.HasNew)), ((System.Nullable<bool>)(obj.HasEdit)), ((System.Nullable<bool>)(obj.HasDelete)), ((System.Nullable<int>)(obj.updated_by)), ((System.Nullable<System.DateTime>)(obj.updated_at)));
		}
		
		private void DeleteRoles_Access_Right(Roles_Access_Right obj)
		{
			this.RolesAccessRights_Delete(((System.Nullable<int>)(obj.id)));
		}
		
		private void InsertRole(Role obj)
		{
			System.Nullable<int> p1 = obj.id;
			this.Roles_Insert(ref p1, obj.RoleName, obj.Description, ((System.Nullable<int>)(obj.created_by)), ((System.Nullable<System.DateTime>)(obj.created_at)));
			obj.id = p1.GetValueOrDefault();
		}
		
		private void UpdateRole(Role obj)
		{
			this.Roles_Update(((System.Nullable<int>)(obj.id)), obj.RoleName, obj.Description, ((System.Nullable<int>)(obj.updated_by)), ((System.Nullable<System.DateTime>)(obj.updated_at)));
		}
		
		private void DeleteRole(Role obj)
		{
			this.Roles_Delete(((System.Nullable<int>)(obj.id)));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Users_GetUserByCredentials")]
		public ISingleResult<User> Users_GetUserByCredentials([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pLogin, pPassword);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Users_Update")]
		public int Users_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pRole_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUpdatedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> pUpdatedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pId, pFirstName, pLastName, pLogin, pPassword, pRole_id, pIsActive, pUpdatedAt, pUpdatedBy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Locked_Objects_CheckLockOnObject")]
		public ISingleResult<Locked_Object> Locked_Objects_CheckLockOnObject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pModuleCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPkId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pModuleCode, pPkId);
			return ((ISingleResult<Locked_Object>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Locked_Objects_SetLockOnObject")]
		public int Locked_Objects_SetLockOnObject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pModuleCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPkId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pModuleCode, pUserId, pPkId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Locked_Objects_RemoveLockFromObject")]
		public int Locked_Objects_RemoveLockFromObject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pModuleCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPkId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pModuleCode, pUserId, pPkId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Users_GetUserByUniqueKey")]
		public ISingleResult<User> Users_GetUserByUniqueKey([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCurrentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pLogin, pCurrentId);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Users_Insert")]
		public int Users_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pRole_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pIsActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCreatedBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> pCreatedAt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid, pFirstName, pLastName, pLogin, pPassword, pRole_id, pIsActive, pCreatedBy, pCreatedAt);
			pid = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Roles_Delete")]
		public int Roles_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Roles_GetRoleByUniqueKey")]
		public ISingleResult<Role> Roles_GetRoleByUniqueKey([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pRoleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pCurrentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pRoleName, pCurrentId);
			return ((ISingleResult<Role>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Roles_Insert")]
		public int Roles_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="VarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(200)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> created_by, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> created_at)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, roleName, description, created_by, created_at);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Roles_Update")]
		public int Roles_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="VarChar(50)")] string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(200)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> updated_by, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> updated_at)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, roleName, description, updated_by, updated_at);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Roles_CanDelete")]
		public ISingleResult<Roles_CanDeleteResult> Roles_CanDelete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pId);
			return ((ISingleResult<Roles_CanDeleteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesAccessRights_Delete")]
		public int RolesAccessRights_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesAccessRights_Update")]
		public int RolesAccessRights_Update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Role_id", DbType="Int")] System.Nullable<int> role_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Access_Right_id", DbType="Int")] System.Nullable<int> access_Right_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasNew", DbType="Bit")] System.Nullable<bool> hasNew, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasEdit", DbType="Bit")] System.Nullable<bool> hasEdit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasDelete", DbType="Bit")] System.Nullable<bool> hasDelete, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> updated_by, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> updated_at)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, role_id, access_Right_id, hasNew, hasEdit, hasDelete, updated_by, updated_at);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RolesAccessRights_Insert")]
		public int RolesAccessRights_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Role_id", DbType="Int")] System.Nullable<int> role_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Access_Right_id", DbType="Int")] System.Nullable<int> access_Right_id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasNew", DbType="Bit")] System.Nullable<bool> hasNew, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasEdit", DbType="Bit")] System.Nullable<bool> hasEdit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasDelete", DbType="Bit")] System.Nullable<bool> hasDelete, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> created_by, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> created_at)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, role_id, access_Right_id, hasNew, hasEdit, hasDelete, created_by, created_at);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="security.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Login;
		
		private System.Data.Linq.Binary _Password;
		
		private int _Role_id;
		
		private bool _IsActive;
		
		private int _created_by;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _updated_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnRole_idChanging(int value);
    partial void OnRole_idChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void Oncreated_byChanging(int value);
    partial void Oncreated_byChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onupdated_byChanging(System.Nullable<int> value);
    partial void Onupdated_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public User()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_id", DbType="Int NOT NULL")]
		public int Role_id
		{
			get
			{
				return this._Role_id;
			}
			set
			{
				if ((this._Role_id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_idChanging(value);
					this.SendPropertyChanging();
					this._Role_id = value;
					this.SendPropertyChanged("Role_id");
					this.OnRole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int NOT NULL")]
		public int created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_by", DbType="Int")]
		public System.Nullable<int> updated_by
		{
			get
			{
				return this._updated_by;
			}
			set
			{
				if ((this._updated_by != value))
				{
					this.Onupdated_byChanging(value);
					this.SendPropertyChanging();
					this._updated_by = value;
					this.SendPropertyChanged("updated_by");
					this.Onupdated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="Role_id", OtherKey="id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Role_id = value.id;
					}
					else
					{
						this._Role_id = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="security.Roles_Access_Rights")]
	public partial class Roles_Access_Right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Role_id;
		
		private int _Access_Right_id;
		
		private bool _HasNew;
		
		private bool _HasEdit;
		
		private bool _HasDelete;
		
		private int _created_by;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _updated_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Access_Right> _Access_Right;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRole_idChanging(int value);
    partial void OnRole_idChanged();
    partial void OnAccess_Right_idChanging(int value);
    partial void OnAccess_Right_idChanged();
    partial void OnHasNewChanging(bool value);
    partial void OnHasNewChanged();
    partial void OnHasEditChanging(bool value);
    partial void OnHasEditChanged();
    partial void OnHasDeleteChanging(bool value);
    partial void OnHasDeleteChanged();
    partial void Oncreated_byChanging(int value);
    partial void Oncreated_byChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onupdated_byChanging(System.Nullable<int> value);
    partial void Onupdated_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public Roles_Access_Right()
		{
			this._Role = default(EntityRef<Role>);
			this._Access_Right = default(EntityRef<Access_Right>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_id", DbType="Int NOT NULL")]
		public int Role_id
		{
			get
			{
				return this._Role_id;
			}
			set
			{
				if ((this._Role_id != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_idChanging(value);
					this.SendPropertyChanging();
					this._Role_id = value;
					this.SendPropertyChanged("Role_id");
					this.OnRole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Access_Right_id", DbType="Int NOT NULL")]
		public int Access_Right_id
		{
			get
			{
				return this._Access_Right_id;
			}
			set
			{
				if ((this._Access_Right_id != value))
				{
					if (this._Access_Right.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccess_Right_idChanging(value);
					this.SendPropertyChanging();
					this._Access_Right_id = value;
					this.SendPropertyChanged("Access_Right_id");
					this.OnAccess_Right_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNew", DbType="Bit NOT NULL")]
		public bool HasNew
		{
			get
			{
				return this._HasNew;
			}
			set
			{
				if ((this._HasNew != value))
				{
					this.OnHasNewChanging(value);
					this.SendPropertyChanging();
					this._HasNew = value;
					this.SendPropertyChanged("HasNew");
					this.OnHasNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEdit", DbType="Bit NOT NULL")]
		public bool HasEdit
		{
			get
			{
				return this._HasEdit;
			}
			set
			{
				if ((this._HasEdit != value))
				{
					this.OnHasEditChanging(value);
					this.SendPropertyChanging();
					this._HasEdit = value;
					this.SendPropertyChanged("HasEdit");
					this.OnHasEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDelete", DbType="Bit NOT NULL")]
		public bool HasDelete
		{
			get
			{
				return this._HasDelete;
			}
			set
			{
				if ((this._HasDelete != value))
				{
					this.OnHasDeleteChanging(value);
					this.SendPropertyChanging();
					this._HasDelete = value;
					this.SendPropertyChanged("HasDelete");
					this.OnHasDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int NOT NULL")]
		public int created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_by", DbType="Int")]
		public System.Nullable<int> updated_by
		{
			get
			{
				return this._updated_by;
			}
			set
			{
				if ((this._updated_by != value))
				{
					this.Onupdated_byChanging(value);
					this.SendPropertyChanging();
					this._updated_by = value;
					this.SendPropertyChanged("updated_by");
					this.Onupdated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Access_Right", Storage="_Role", ThisKey="Role_id", OtherKey="id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Roles_Access_Rights.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Roles_Access_Rights.Add(this);
						this._Role_id = value.id;
					}
					else
					{
						this._Role_id = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Access_Right_Roles_Access_Right", Storage="_Access_Right", ThisKey="Access_Right_id", OtherKey="id", IsForeignKey=true)]
		public Access_Right Access_Right
		{
			get
			{
				return this._Access_Right.Entity;
			}
			set
			{
				Access_Right previousValue = this._Access_Right.Entity;
				if (((previousValue != value) 
							|| (this._Access_Right.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Access_Right.Entity = null;
						previousValue.Roles_Access_Rights.Remove(this);
					}
					this._Access_Right.Entity = value;
					if ((value != null))
					{
						value.Roles_Access_Rights.Add(this);
						this._Access_Right_id = value.id;
					}
					else
					{
						this._Access_Right_id = default(int);
					}
					this.SendPropertyChanged("Access_Right");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="security.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _RoleName;
		
		private string _Description;
		
		private int _created_by;
		
		private System.DateTime _created_at;
		
		private System.Nullable<int> _updated_by;
		
		private System.Nullable<System.DateTime> _updated_at;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Roles_Access_Right> _Roles_Access_Rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void Oncreated_byChanging(int value);
    partial void Oncreated_byChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onupdated_byChanging(System.Nullable<int> value);
    partial void Onupdated_byChanged();
    partial void Onupdated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onupdated_atChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Roles_Access_Rights = new EntitySet<Roles_Access_Right>(new Action<Roles_Access_Right>(this.attach_Roles_Access_Rights), new Action<Roles_Access_Right>(this.detach_Roles_Access_Rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int NOT NULL")]
		public int created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_by", DbType="Int")]
		public System.Nullable<int> updated_by
		{
			get
			{
				return this._updated_by;
			}
			set
			{
				if ((this._updated_by != value))
				{
					this.Onupdated_byChanging(value);
					this.SendPropertyChanging();
					this._updated_by = value;
					this.SendPropertyChanged("updated_by");
					this.Onupdated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated_at
		{
			get
			{
				return this._updated_at;
			}
			set
			{
				if ((this._updated_at != value))
				{
					this.Onupdated_atChanging(value);
					this.SendPropertyChanging();
					this._updated_at = value;
					this.SendPropertyChanged("updated_at");
					this.Onupdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="id", OtherKey="Role_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Roles_Access_Right", Storage="_Roles_Access_Rights", ThisKey="id", OtherKey="Role_id")]
		public EntitySet<Roles_Access_Right> Roles_Access_Rights
		{
			get
			{
				return this._Roles_Access_Rights;
			}
			set
			{
				this._Roles_Access_Rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Roles_Access_Rights(Roles_Access_Right entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Roles_Access_Rights(Roles_Access_Right entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="security.Access_Rights")]
	public partial class Access_Right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Description;
		
		private EntitySet<Roles_Access_Right> _Roles_Access_Rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Access_Right()
		{
			this._Roles_Access_Rights = new EntitySet<Roles_Access_Right>(new Action<Roles_Access_Right>(this.attach_Roles_Access_Rights), new Action<Roles_Access_Right>(this.detach_Roles_Access_Rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Access_Right_Roles_Access_Right", Storage="_Roles_Access_Rights", ThisKey="id", OtherKey="Access_Right_id")]
		public EntitySet<Roles_Access_Right> Roles_Access_Rights
		{
			get
			{
				return this._Roles_Access_Rights;
			}
			set
			{
				this._Roles_Access_Rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles_Access_Rights(Roles_Access_Right entity)
		{
			this.SendPropertyChanging();
			entity.Access_Right = this;
		}
		
		private void detach_Roles_Access_Rights(Roles_Access_Right entity)
		{
			this.SendPropertyChanging();
			entity.Access_Right = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="security.Locked_Objects")]
	public partial class Locked_Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleCode;
		
		private int _User_id;
		
		private int _Pk_Id;
		
		private System.DateTime _LockDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleCodeChanging(int value);
    partial void OnModuleCodeChanged();
    partial void OnUser_idChanging(int value);
    partial void OnUser_idChanged();
    partial void OnPk_IdChanging(int value);
    partial void OnPk_IdChanged();
    partial void OnLockDateChanging(System.DateTime value);
    partial void OnLockDateChanged();
    #endregion
		
		public Locked_Object()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleCode
		{
			get
			{
				return this._ModuleCode;
			}
			set
			{
				if ((this._ModuleCode != value))
				{
					this.OnModuleCodeChanging(value);
					this.SendPropertyChanging();
					this._ModuleCode = value;
					this.SendPropertyChanged("ModuleCode");
					this.OnModuleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_id
		{
			get
			{
				return this._User_id;
			}
			set
			{
				if ((this._User_id != value))
				{
					this.OnUser_idChanging(value);
					this.SendPropertyChanging();
					this._User_id = value;
					this.SendPropertyChanged("User_id");
					this.OnUser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pk_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pk_Id
		{
			get
			{
				return this._Pk_Id;
			}
			set
			{
				if ((this._Pk_Id != value))
				{
					this.OnPk_IdChanging(value);
					this.SendPropertyChanging();
					this._Pk_Id = value;
					this.SendPropertyChanged("Pk_Id");
					this.OnPk_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockDate", DbType="DateTime NOT NULL")]
		public System.DateTime LockDate
		{
			get
			{
				return this._LockDate;
			}
			set
			{
				if ((this._LockDate != value))
				{
					this.OnLockDateChanging(value);
					this.SendPropertyChanging();
					this._LockDate = value;
					this.SendPropertyChanged("LockDate");
					this.OnLockDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Roles_CanDeleteResult
	{
		
		private System.Nullable<int> _RoleCount;
		
		public Roles_CanDeleteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCount", DbType="Int")]
		public System.Nullable<int> RoleCount
		{
			get
			{
				return this._RoleCount;
			}
			set
			{
				if ((this._RoleCount != value))
				{
					this._RoleCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
